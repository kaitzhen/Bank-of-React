{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaitl\\\\Coding\\\\bank-of-react\\\\src\\\\App.js\";\n// src/App.js\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n\n    this.mockLogIn = logInInfo => {\n      const newUser = { ...this.state.currentUser\n      };\n      newUser.userName = logInInfo.userName;\n      this.setState({\n        currentUser: newUser\n      });\n    };\n\n    this.state = {\n      accountBalance: 14568.27,\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '07/23/96'\n      },\n      credits: [],\n      debits: []\n    };\n  }\n\n  async componentDidMount() {\n    let CreditAPILink = 'https://moj-api.herokuapp.com/credits';\n\n    try {\n      let response = await axios.get(CreditAPILink);\n      console.log(response.data); // To get data object in the response, need to use \"response.data\"\n\n      this.setState({\n        credits: response.data\n      }); // Store received data in state's \"users\" object\n    } catch (error) {\n      // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // Print out error message (e.g., Not Found)\n\n        console.log(error.response.status); // Print out error status code (e.g., 404)\n      }\n    }\n  } // Update state's currentUser (userName) after \"Log In\" button is clicked\n\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    const HomeComponent = () => /*#__PURE__*/_jsxDEV(Home, {\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 34\n    }, this);\n\n    const UserProfileComponent = () => /*#__PURE__*/_jsxDEV(UserProfile, {\n      userName: this.state.currentUser.userName,\n      memberSince: this.state.currentUser.memberSince\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n\n    const LogInComponent = () => /*#__PURE__*/_jsxDEV(LogIn, {\n      user: this.state.currentUser,\n      mockLogIn: this.mockLogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 35\n    }, this); // Pass props to \"LogIn\" component\n\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: HomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: UserProfileComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: LogInComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/kaitl/Coding/bank-of-react/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","axios","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","accountBalance","memberSince","credits","debits","componentDidMount","CreditAPILink","response","get","console","log","data","error","status","render","HomeComponent","UserProfileComponent","LogInComponent"],"mappings":"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","sourcesContent":["// src/App.js\r\n\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport axios from 'axios';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 14568.27,\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '07/23/96',\r\n      },\r\n      credits: [],\r\n      debits:[]\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let CreditAPILink = 'https://moj-api.herokuapp.com/credits';  \r\n\r\n    try {  \r\n      let response = await axios.get(CreditAPILink);\r\n      console.log(response.data);  \r\n      // To get data object in the response, need to use \"response.data\"\r\n      this.setState({credits: response.data});  // Store received data in state's \"users\" object\r\n    } \r\n    catch (error) {  // Print out errors at console when there is an error response\r\n      if (error.response) {\r\n        // The request was made, and the server responded with error message and status code.\r\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\r\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\r\n      }    \r\n    }\r\n  }  \r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser}\r\n    newUser.userName = logInInfo.userName\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\r\n    const UserProfileComponent = () => (\r\n        <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}  />\r\n    );\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)  // Pass props to \"LogIn\" component\r\n\r\n    return (\r\n        <Router>\r\n          <div>\r\n            <Route exact path=\"/\" render={HomeComponent}/>\r\n            <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n            <Route exact path=\"/login\" render={LogInComponent}/>\r\n          </div>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}